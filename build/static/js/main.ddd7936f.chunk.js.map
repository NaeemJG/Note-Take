{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","delete","id","CreateArea","useState","zoom","setZoom","onSubmit","submit","name","placeholder","onChange","handleChange","value","rows","Zoom","in","Fab","type","App","note","addNote","notes","allNotes","deleteButton","prevValue","filter","index","event","target","preventDefault","map","key","ReactDOM","render","document","getElementById"],"mappings":"8NAUeA,MARA,IAEX,gCACE,wCCMSC,MATA,KACb,MAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,K,iBCOPG,MAVFC,GAET,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QAAS,IAAMJ,EAAMK,OAAOL,EAAMM,KAAK,kBAAC,IAAD,Q,iCCgBtCC,MAnBIP,IAAU,MAAD,EACFQ,oBAAS,GADP,mBACnBC,EADmB,KACbC,EADa,KAM1B,OACE,6BACE,0BAAMT,UAAU,cAAcU,SAAUX,EAAMY,QAC5C,2BAAOC,KAAK,QAAQC,YAAY,QAAQC,SAAUf,EAAMgB,aAAcC,MAAOjB,EAAME,MAAOE,QAP7E,IACVM,GAAQ,KAOVD,GAAQ,8BAAUI,KAAK,UAAUC,YAAY,iBAAiBI,KAAK,IAAIH,SAAUf,EAAMgB,aAAcC,MAAOjB,EAAMG,UACnH,kBAACgB,EAAA,EAAD,CAAMC,GAAIX,GACR,kBAACY,EAAA,EAAD,CAAKC,KAAK,UAAS,kBAAC,IAAD,WC8CdC,MAzDH,KAAO,MAAD,EACQf,mBAAS,CAC/BN,MAAO,GACPC,QAAS,KAHK,mBACTqB,EADS,KACHC,EADG,OAMUjB,mBAAS,IANnB,mBAMTkB,EANS,KAMFC,EANE,KAoCVC,EAAgBtB,IACpBqB,EAASE,GACAA,EAAUC,OAAO,CAACN,EAAMO,IACtBA,IAAUzB,KAMvB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYU,aAxCKgB,IAAU,MAAD,EACJA,EAAMC,OAAtBpB,EADoB,EACpBA,KAAMI,EADc,EACdA,MACdQ,EAAQI,GACO,UAAThB,EACK,CACLX,MAAOe,EACPd,QAAS0B,EAAU1B,SAEH,YAATU,EACF,CACLX,MAAO2B,EAAU3B,MACjBC,QAASc,QAHN,IAgCiCL,OAvB1BoB,IACdL,EAASE,GACA,IAAIA,EAAWL,IAExBQ,EAAME,iBACNT,EAAQ,CACNvB,MAAO,GACPC,QAAS,MAgB6CD,MAAOsB,EAAKtB,MAAOC,QAASqB,EAAKrB,UACxFuB,EAAMS,IAAI,CAACX,EAAKO,IACR,kBAAC,EAAD,CAAMK,IAAKL,EAAOzB,GAAIyB,EAAO7B,MAAOsB,EAAKtB,MAAOC,QAASqB,EAAKrB,QAASE,OAAQuB,KAExF,kBAAC,EAAD,QCtDNS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ddd7936f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>eNotes!</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst Note = props => {\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={() => props.delete(props.id)}><DeleteIcon /></button>\n    </div>\n  );\n};\n\nexport default Note;\n","import React, {useState} from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\n\nconst CreateArea = props => {\n  const [zoom, setZoom] = useState(false)\n  const setTheZoom = () => {\n    return setZoom(true)\n  }\n \n  return (\n    <div>\n      <form className=\"create-note\" onSubmit={props.submit}>\n        <input name=\"title\" placeholder=\"Title\" onChange={props.handleChange} value={props.title} onClick={setTheZoom}/>\n        {zoom && <textarea name=\"content\" placeholder=\"Take a note...\" rows=\"3\" onChange={props.handleChange} value={props.content}/>}\n        <Zoom in={zoom}>\n          <Fab type=\"submit\"><AddIcon/></Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nconst App = () => {\n  const [note, addNote] = useState({\n    title: '',\n    content: ''\n  });\n\n  const [notes, allNotes] = useState([])\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    addNote(prevValue => {\n      if (name === \"title\") {\n        return {\n          title: value,\n          content: prevValue.content\n        };\n      } else if (name === \"content\") {\n        return {\n          title: prevValue.title,\n          content: value\n        };\n      }\n    });\n  }\n    \n    const submit = (event) => {\n      allNotes(prevValue => {\n        return [...prevValue, note]\n      })\n      event.preventDefault()\n      addNote({\n        title: '',\n        content: ''\n      })\n    }\n\n  const deleteButton = (id) => {\n    allNotes(prevValue => {\n      return prevValue.filter((note, index) => {\n        return index !== id\n      })\n    })\n  }\n\n\n  return (\n    <div>\n      <Header />\n      <CreateArea handleChange={handleChange} submit={submit} title={note.title} content={note.content}/>\n      {notes.map((note,index) => {\n        return <Note key={index} id={index} title={note.title} content={note.content} delete={deleteButton}/>\n      })}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}